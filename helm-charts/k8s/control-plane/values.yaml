# Global configuration
global:
  postgresql:
    enabled: true

# Control Plane configuration
controlPlane:
  imagePullSecrets: "gcr-secret"
  
  secrets:
    controlPlaneJWTSecret: ""
  
  components:
    api:
      enabled: true
      replicaCount: 2
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/control-plane-api"
        tag: "latest"
        pullPolicy: "IfNotPresent"
      host: ""
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"
    
    app:
      enabled: true
      replicaCount: 2
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/app"
        tag: "latest"
        pullPolicy: "IfNotPresent"
      host: ""
      secondaryHost: ""
      config:
        port: "3000"
        nodeEnv: "production"
        apiUrl: ""
        controlPlaneApiUrl: ""
        dataPlaneApiUrl: ""
        openaiModel: "gpt-4"
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"
      initContainer:
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
    
    scheduler:
      enabled: true
      replicaCount: 1
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/scheduler"
        tag: "latest"
        pullPolicy: "IfNotPresent"
      host: ""
      env:
        dataPlaneApiUrl: ""
        controlPlaneApiUrl: ""
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"

# PostgreSQL configuration
postgresql:
  enabled: true
  imagePullSecrets: []
  image:
    repository: "postgres"
    tag: "15-alpine"
    pullPolicy: "IfNotPresent"
  persistence:
    enabled: true
    size: "10Gi"
    storageClass: ""
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  service:
    type: ClusterIP
    port: 5432
  secrets:
    name: "postgresql-secrets"
    user: "postgres"
    password: ""
    database: "neuraltrust"
    host: ""
    port: "5432"

# OpenAI configuration
openai:
  secrets:
    apiKey: ""

# Resend configuration (for email services)
resend:
  apiKey: ""
  alertSender: "alerts@example.com"
  inviteSender: "invites@example.com"

# Clerk configuration (for authentication)
clerk:
  publishableKey: ""
  secretKey: ""
  webhookSecretSessions: ""
  webhookSecretUsers: ""
  authorizationCallbackUrl: "https://app.example.com/auth/callback"
  signInUrl: "https://app.example.com/sign-in"
  signUpUrl: "https://app.example.com/sign-up" 