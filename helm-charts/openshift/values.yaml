global:
  postgresql:
    enabled: false
  accessMode: ReadWriteOnce
  classifierModel: "gpt"
  issuer:
    name: "letsencrypt-prod"
    server: "https://acme-v02.api.letsencrypt.org/directory"
  # Network policies
  network:
    controlPlaneCidr: "10.0.0.0/16"
    dataPlanecidr: "10.1.0.0/16"
    clientDataPlaneCidr: ""
    clientVpnCidr: ""
    excludedClientRanges: []
  resend:
    apiKey: ""  # Define this value, or set it via --set or environment-specific values
    alertSender: ""  # Define this value, or set it via --set or environment-specific values
    inviteSender: ""  # Define this value, or set it via --set or environment-specific values
  clerk:
    publishableKey: ""  # Define this value, or set it via --set or environment-specific values
    secretKey: ""  # Define this value, or set it via --set or environment-specific values
    webhookSecretSessions: ""  # Define this value, or set it via --set or environment-specific values
    webhookSecretUsers: ""  # Define this value, or set it via --set or environment-specific values
    authorizationCallbackUrl: ""  # Define this value, or set it via --set or environment-specific values
    signInUrl: ""  # Define this value, or set it via --set or environment-specific values
    signUpUrl: ""  # Define this value, or set it via --set or environment-specific values

cert-manager:
  enabled: false  # Changed from ${global.certManager.enabled}
  email: victor.garcia@neuraltrust.ai
  issuer:
    dns01:
      enabled: false
    name: "letsencrypt-prod"
    server: "https://acme-v02.api.letsencrypt.org/directory"

controlPlane:
  enabled: true
  components:
    scheduler:
      enabled: true
      replicaCount: 1  # Standardized naming
      host: ""
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/scheduler"
        tag: "latest"
        pullPolicy: "Always"
        imagePullSecrets:
          - name: gcr-secret
      env:
        dataPlaneApiUrl: ""  # Define this value, or set it via --set or environment-specific values
        dataPlaneApiVersion: v1
        dataPlaneJwtSecret: ""  # Define this value, or set it via --set or environment-specific values
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
    api:
      enabled: true
      replicaCount: 2  # Standardized naming
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/control-plane-api"
        tag: "latest"
        pullPolicy: "Always"
        imagePullSecrets:
          - name: gcr-secret
      host: ""
      secrets:
        controlPlaneJWTSecret: ""  # Define this value, or set it via --set or environment-specific values
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 500m
    app:
      enabled: true
      replicaCount: 1
      image:
        repository: "europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/app"
        tag: "latest"
        pullPolicy: "Always"
        imagePullSecrets:
          - name: gcr-secret
      host: ""
      secondaryHost: ""
      config:
        nodeEnv: production
        port: 3000
        controlPlaneApiUrl: ""
        dataPlaneApiUrl: ""  # Define this value, or set it via --set or environment-specific values
        openaiModel: ""  # Define this value, or set it via --set or environment-specific values
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 500m

dataPlane:
  enabled: true
  secrets:
    openaiApiKeySecretName: "openai-secrets" # Secret name for OpenAI key
    openaiApiKey: ""  # Define this value, or set it via --set or environment-specific values
    googleApiKeySecretName: "google-secrets" # Secret name for Google key
    googleApiKey: ""  # Define this value, or set it via --set or environment-specific values
    resendApiKeySecretName: "resend-secrets" # Secret name for Resend key
    resendApiKey: ""  # Define this value, or set it via --set or environment-specific values
    dataPlaneJWTSecretName: "data-plane-jwt-secret" # Secret name for Data Plane JWT
    dataPlaneJWTSecret: ""  # Define this value, or set it via --set or environment-specific values
  components:
    clickhouse:
      enabled: true
      backup:
        enabled: false
        type: "s3"  # s3 or gcs
        image:
          repository: "curlimages/curl"
          tag: "8.13.0"
        s3:
          bucket: ""  # Define this value, or set it via --set or environment-specific values
          region: ""  # Define this value, or set it via --set or environment-specific values
          accessKey: ""  # Define this value, or set it via --set or environment-specific values
          secretKey: ""  # Define this value, or set it via --set or environment-specific values
          endpoint: ""  # Optional, for custom S3-compatible endpoints
        gcs:
          bucket: ""  # Define this value, or set it via --set or environment-specific values
          accessKey: ""  # Define this value, or set it via --set or environment-specific values
          secretKey: ""  # Define this value, or set it via --set or environment-specific values
      auth:
        username: "neuraltrust"
      image:
        repository: "clickhouse/clickhouse-server"
        tag: "25.3.2"
        pullPolicy: "Always"
        imagePullSecrets:
          - name: ""
      # Connection configuration
      host: "clickhouse"
      port: "8123"
      user: "neuraltrust"
      database: "neuraltrust"
      # Configuration references
      secrets:
        name: "clickhouse-secrets"
      configmap:
        name: "clickhouse-init-job"
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 500m
    kafka:
      enabled: true
      connect:
        replicas: 1
        image: europe-west1-docker.pkg.dev/neuraltrust-app-dev/nt-docker/kafka-connect:latest
        imagePullSecrets:
          - name: ""
      broker:
        replicas: 1
        imagePullSecrets:
          - name: ""
      ui:
        image: provectuslabs/kafka-ui:v0.7.2
    api:
      enabled: true
      replicaCount: 2  # Standardized naming
      image:
        repository: europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/data-plane-api
        tag: latest
        pullPolicy: Always
        imagePullSecrets:
          - name: gcr-secret
      host: ""
      accessMode: ReadWriteOnce
      huggingfaceToken: ""  # Define this value, or set it via --set or environment-specific values
      storage: 10Gi
      # TrustTest Configuration (.trusttest_config.json)
      trustTestConfig:
        evaluator:
          provider: "google"
          model: "gemini-2.0-flash"
          temperature: 0.2
        question_generator:
          provider: "google"
          model: "gemini-2.0-flash"
          temperature: 0.5
        embeddings:
          provider: "openai"
          model: "text-embedding-3-small"
        topic_summarizer:
          provider: "google"
          model: "gemini-2.0-flash"
          temperature: 0.2
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 400m
          memory: 1Gi
    worker:
      enabled: true
      replicas: 1
      image:
        repository: europe-west1-docker.pkg.dev/neuraltrust-app-prod/nt-docker/workers
        tag: latest
        pullPolicy: Always
        imagePullSecrets:
          - name: gcr-secret
      resources:
        requests:
          memory: 4Gi
          cpu: 1000m
        limits:
          memory: 8Gi
          cpu: 2000m
    connectorsJob: # New section for the create-connectors job
      image: curlimages/curl:8.13.0 # Default image for create-connectors job

postgresql:
  enabled: false  # Changed from ${global.postgresql.enabled}
  image:
    repository: "postgres"
    tag: "15-alpine"
    pullPolicy: "IfNotPresent"
    imagePullSecrets:
      - name: ""
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  service:
    type: ClusterIP
    port: 5432