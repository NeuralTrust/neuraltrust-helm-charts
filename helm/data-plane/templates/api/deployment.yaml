apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-api"
  labels:
    app: api
    plane: control
spec:
  replicas: {{ .Values.dataPlane.components.api.replicas }}
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        plane: control
    spec:
      imagePullSecrets:
      - name: "gcr-secret"
      containers:
      - name: api
        image: "{{ .Values.dataPlane.components.api.image.repository }}:{{ .Values.dataPlane.components.api.image.tag }}"
        imagePullPolicy: {{ .Values.dataPlane.components.api.image.pullPolicy }}
        ports:
        - containerPort: 8000
        env:
          - name: PORT
            value: "8000"
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: "kafka:9092"
          - name: HF_HOME
            value: "/root/.cache/huggingface"
          - name: HUGGINGFACE_TOKEN
            value: "{{ .Values.dataPlane.components.api.huggingfaceToken }}"
          - name: PYTHONPATH
            value: "/app"
          - name: CLICKHOUSE_HOST
            valueFrom:
              secretKeyRef:
                name: clickhouse-secrets
                key: CLICKHOUSE_HOST
          - name: CLICKHOUSE_PORT
            valueFrom:
              secretKeyRef:
                name: clickhouse-secrets
                key: CLICKHOUSE_PORT
          - name: CLICKHOUSE_DATABASE
            valueFrom:
              secretKeyRef:
                name: clickhouse-secrets
                key: CLICKHOUSE_DATABASE
          - name: CLICKHOUSE_USER
            valueFrom:
              secretKeyRef:
                name: clickhouse-secrets
                key: CLICKHOUSE_USER
          - name: CLICKHOUSE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: clickhouse
                key: admin-password
        volumeMounts:
          - name: huggingface-cache
            mountPath: "/root/.cache/huggingface"
        resources:
          {{- toYaml .Values.dataPlane.components.api.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 60
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
      volumes:
      - name: huggingface-cache
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-huggingface-cache"
