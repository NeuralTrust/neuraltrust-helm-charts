apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app: {{ .Release.Name }}-app
spec:
  replicas: {{ .Values.controlPlane.components.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
    spec:
      initContainers:
      - name: init-prisma
        image: "{{ .Values.controlPlane.components.app.image.repository }}:{{ .Values.controlPlane.components.app.image.tag }}"
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
        command: ["/bin/sh", "-c"]
        args: 
          - |
            cd /tmp
            export HOME=/tmp
            export NODE_PATH=/tmp/node_modules
            npm install --prefix /tmp prisma
            cd /app
            # Wait for PostgreSQL to be ready
            echo "Waiting for PostgreSQL..."
            echo "POSTGRES_HOST: $(POSTGRES_HOST)"
            echo "POSTGRES_PORT: $(POSTGRES_PORT)"
            echo "POSTGRES_DATABASE: $(POSTGRES_DATABASE)"
            echo "POSTGRES_USER: $(POSTGRES_USER)"
            echo "POSTGRES_PASSWORD: $(POSTGRES_PASSWORD)"
            echo "POSTGRES_PRISMA_URL: $(POSTGRES_PRISMA_URL)"
            sleep 10
            /tmp/node_modules/.bin/prisma db push --schema=/app/prisma/schema.prisma --skip-generate
        env:
        - name: npm_config_cache
          value: "/tmp/.npm"
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_PORT
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_PRISMA_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)?connection_limit=15"
        - name: CONTROL_PLANE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: control-plane-jwt-secret
              key: CONTROL_PLANE_JWT_SECRET
        - name: DATA_PLANE_API_URL
          value: "https://{{ .Values.controlPlane.components.app.config.apiUrl }}"
        - name: DATA_PLANE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: data-plane-jwt-secret
              key: DATA_PLANE_JWT_SECRET
        - name: CONTROL_PLANE_API_URL
          value: "https://{{ .Values.controlPlane.components.app.config.apiUrl }}"
      imagePullSecrets:
        {{- toYaml .Values.controlPlane.components.app.imagePullSecrets | nindent 10 }}
      containers:
      - name: app
        image: "{{ .Values.controlPlane.components.app.image.repository }}:{{ .Values.controlPlane.components.app.image.tag }}"
        imagePullPolicy: "{{ .Values.controlPlane.components.app.image.pullPolicy }}"
        ports:
        - containerPort: {{ .Values.controlPlane.components.app.config.port }}
        env:
        - name: NODE_ENV
          value: "{{ .Values.controlPlane.components.app.config.nodeEnv }}"
        - name: PORT
          value: "{{ .Values.controlPlane.components.app.config.port }}"
        - name: NT_API_URL
          value: "http://neuraltrust-api-service.neuraltrust.svc.cluster.local:80"
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_PORT
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_PRISMA_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)?connection_limit=15"
        - name: NEXTAUTH_URL
          value: "https://{{ .Values.controlPlane.components.app.config.controlPlaneAppUrl }}"
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: auth-secret
        - name: OAUTH_CLIENT_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: oauth-client-key
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: oauth-client-secret
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "{{ .Values.controlPlane.components.app.config.nodeTlsRejectUnauthorized }}"
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: sendgrid-api-key
        - name: SENDER
          value: "{{ .Values.controlPlane.components.app.config.sender }}"
        - name: APP_URL
          value: "https://{{ .Values.controlPlane.components.app.config.controlPlaneAppUrl }}"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: secret-key
        - name: OPENAI_APIKEY
          valueFrom:
            secretKeyRef:
              name: openai-secrets
              key: OPENAI_API_KEY
        - name: OPENAI_MODEL
          value: "{{ .Values.controlPlane.components.app.config.openaiModel }}"
        - name: TRIGGER_API_URL
          value: "http://trigger.{{ .Release.Namespace }}.svc.cluster.local:3030"
        - name: TRIGGER_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: trigger-api-key
        - name: NEXT_PUBLIC_TRIGGER_PUBLIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: trigger-public-api-key
        - name: CONTROL_PLANE_API_URL
          value: "https://{{ .Values.controlPlane.components.app.config.controlPlaneApiUrl }}"
        - name: CONTROL_PLANE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: control-plane-jwt-secret
              key: CONTROL_PLANE_JWT_SECRET
        - name: DATA_PLANE_API_URL
          value: "https://{{ .Values.controlPlane.components.app.config.dataPlaneApiUrl }}"
        - name: DATA_PLANE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: data-plane-jwt-secret
              key: DATA_PLANE_JWT_SECRET
        resources:
          {{- toYaml .Values.controlPlane.components.app.resources | nindent 10 }}