{{- if .Values.global.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      {{- if .Values.postgresql.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.postgresql.securityContext.fsGroup }}
      {{- end }}
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        {{- if .Values.postgresql.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.postgresql.securityContext.runAsUser }}
        {{- end }}
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: POSTGRES_DB
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: postgresql-data
        {{- if .Values.postgresql.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgresql-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: postgresql-config
        configMap:
          name: {{ .Release.Name }}-postgresql-config
{{- end }} 